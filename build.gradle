apply plugin: 'java'


sourceSets {
    udpClient {
        java {
            srcDirs = ['src/udpClient']
        }
    }

    udpServer {
        java {
            srcDirs = ['src/udpServer']
        }
    }

    tcpClient {
        java {
            srcDirs = ['src/tcpClient']
        }
    }

    tcpServer {
        java {
            srcDirs = ['src/tcpServer']
        }
    }

    multicastPeer {
        java {
            srcDirs = ['src/multicastPeer']
        }
    }

    sendServer {
        java {
            srcDirs = ['src/filesendServer']
        }
    }

    sendClient {
        java {
            srcDirs = ['src/filesendClient']
        }
    }

    multicastTCPOverlay {
        java {
            srcDirs = ['src/multicastTcpOverlay']
        }
    }
}

task udpClientJar(type: Jar) {
    description 'Create UDP Client executable jar.'
    from sourceSets.udpClient.output
    archiveName = "UDPClient.jar"
    manifest {
            attributes "Main-Class" : "UDPClient"
    } 
}

task udpServerJar(type: Jar) {
    description 'Create UDP Server executable jar'
    from sourceSets.udpServer.output
    archiveName = "UDPServer.jar"
    manifest {
            attributes "Main-Class" : "UDPServer"
    }
}

task tcpClientJar(type: Jar) {
    description 'Create TCP Client executable jar.'
    from sourceSets.tcpClient.output
    archiveName = "TCPClient.jar"
    manifest {
            attributes "Main-Class" : "TCPClient"
    } 
}

task tcpServerJar(type: Jar) {
    description 'Create TCP Server executable jar.'
    from sourceSets.tcpServer.output
    archiveName = "TCPServer.jar"
    manifest {
            attributes "Main-Class" : "TCPServer"
    } 
}

task multicastPeerJar(type: Jar) {
    description 'Create MulticastPeer executable jar.'
    from sourceSets.multicastPeer.output
    archiveName = "MulticastPeer.jar"
    manifest {
            attributes "Main-Class" : "MulticastPeer"
    } 
}

task fileSendServerJar(type: Jar) {
    description 'Create Send server executable jar.'
    from sourceSets.sendServer.output
    archiveName = "FileSendServer.jar"
    manifest {
            attributes "Main-Class" : "FileSendServer"
    } 
}

task fileSendClientJar(type: Jar) {
    description 'Create Send client executable jar.'
    from sourceSets.sendClient.output
    archiveName = "FileSendClient.jar"
    manifest {
            attributes "Main-Class" : "FileSendClient"
    } 
}

task multicastTCPOverlayJar(type: Jar) {
    description 'Create Multicast TCP overlay executable jar.'
    from sourceSets.multicastTCPOverlay.output
    archiveName = "MulticastTCPOverlay.jar"
    manifest {
            attributes "Main-Class" : "MulticastTCPOverlay"
    } 
}

task all(dependsOn: ['udpClientJar', 'udpServerJar', 'tcpClientJar', 'tcpServerJar', 'multicastPeerJar', 'fileSendServerJar', 'fileSendClientJar', 'multicastTCPOverlayJar'])
